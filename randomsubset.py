import os
from random import *
import pandas as pd
import shutil

rs = Random()
rs.seed(1)

trainlabels = pd.read_csv('trainLabels.csv')
fids = []
opd = pd.DataFrame()
malware_classes = 4
for clabel in range(1, malware_classes + 1):
    mids = trainlabels[trainlabels.Class == clabel]
    mids = mids.reset_index(drop=True)

    rchoice = [rs.randint(0, abs(len(mids) - 1)) for i in range(99)]

    #     for i in rchoice:
    #         fids.append(mids.loc[i].Id)
    #         opd = opd.append(mids.loc[i])

    rids = [mids.loc[i].Id for i in rchoice]
    fids.extend(rids)
    opd = opd.append(mids.loc[rchoice])

opd = opd.reset_index(drop=True)
# print opd
opd.to_csv('subtrainLabels.csv', encoding='utf-8', index=False)

sbase = '/home/mkr/Desktop/projects/python/databases/cic_and_mal_2017/train_opseq/'
tbase = '/home/mkr/Desktop/projects/python/databases/cic_and_mal_2017/subtrain/'
malware_classes = pd.read_csv('classes.csv')

# creating malware classes folders in tbase
for mal_class in malware_classes['ClassName'].get_values():
    dir_path = tbase + mal_class
    if not os.path.isdir(dir_path):
        os.mkdir(dir_path)

for row in opd.get_values():
    opseq_filename = row[0]
    malware_class_name = malware_classes[malware_classes.ClassId == row[1]].ClassName.get_values()[0]
    opseq_path_src = os.path.join(sbase, '%s/%s.opseq' % (malware_class_name, opseq_filename))
    opseq_path_target = os.path.join(tbase, '%s/%s.opseq' % (malware_class_name, opseq_filename))
    shutil.copy(opseq_path_src, opseq_path_target)
