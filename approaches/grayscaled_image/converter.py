import os
from scipy.misc import imsave
import array
import numpy as np
import shutil
import pandas as pd
from utils import constants

imgs_path = constants.FOLDER_ROOT + '/approaches/grayscaled_image/imgs'


# Create folders from classes.csv
def prepare_imgs_folder():
    def clear():
        for path, dirs, files in os.walk(imgs_path):
            for d in dirs:
                shutil.rmtree('%s/%s' % (imgs_path, d))
            for f in files:
                os.remove('%s/%s' % (imgs_path, f))
        print 'Image folder was cleared'

    def create_class_folders():
        malware_classes = pd.read_csv(constants.CSV_CLASSES)
        for className in malware_classes.ClassName:
            os.mkdir('%s/%s' % (imgs_path, className))
        print 'Classes folders were created'

    clear()
    create_class_folders()


def convert_file_to_png(file_path, img_save_trg):
    f = open(file_path, 'rb')
    ln = os.path.getsize(file_path)
    width = 256
    rem = ln % width

    a = array.array("B")
    a.fromfile(f, ln - rem)

    f.close()

    g = np.reshape(a, (len(a) / width, width))
    g = np.uint8(g)

    imsave('%s.png' % img_save_trg, g)


def convert_all_apks_to_imgs():
    subtrains = pd.read_csv(constants.CSV_SUBTRAIN)
    malware_classes = pd.read_csv(constants.CSV_CLASSES)
    apks_root_target = '/home/mkr/Desktop/projects/python/databases/cic_and_mal_2017/subtrain_apks'

    ids = []
    for item in subtrains.Id:
        ids.append(item)

    for id in ids:
        id_class = subtrains[subtrains.Id == id].Class.get_values()[0]
        id_class_name = malware_classes[malware_classes.ClassId == id_class].ClassName.get_values()[0]
        apk_path_src = '%s/%s/%s.apk' % (apks_root_target, id_class_name, id)
        img_path_src = '%s/%s/%s' % (imgs_path, id_class_name, id)
        convert_file_to_png(apk_path_src, img_path_src)


if __name__ == '__main__':
    convert_all_apks_to_imgs()
