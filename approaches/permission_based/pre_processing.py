import csv
import os
from collections import Counter, defaultdict

import pandas as pd

from androguard.misc import APK
from utils import constants


def display_services_features(apk):
    print ''
    print 'Services features'
    for ser in apk.get_services():
        print '[%s]: %s' % (ser, apk.get_intent_filters('service', ser))


def display_receivers_features(apk):
    print ''
    print 'Receivers features'
    for rec in apk.get_receivers():
        print '[%s]: %s' % (rec, apk.get_intent_filters('receiver', rec))


def display_activity_features(apk):
    print ''
    print 'Activities features'
    for act in apk.get_activities():
        print '[%s]: %s' % (act, apk.get_intent_filters('activity', act))


def extract_intent_filters(apk, type_name, type_list):
    res = []
    for type_item in type_list:
        type_item_ifs = apk.get_intent_filters(type_name, type_item).get('action')
        if type_item_ifs is not None:
            for type_item_if in type_item_ifs:
                res.append(type_item_if)
    return res


def get_all_intent_filters(apk):
    intent_filters = []
    intent_filters.extend(extract_intent_filters(apk, 'service', apk.get_services()))
    intent_filters.extend(extract_intent_filters(apk, 'receiver', apk.get_receivers()))
    intent_filters.extend(extract_intent_filters(apk, 'activity', apk.get_activities()))
    return intent_filters


def display_all_intent_filters(apk):
    print '\n=Intent filters='
    for i_f in get_all_intent_filters(apk):
        print i_f


def display_permissions(apk):
    print '\n=Permissions='
    permissions = apk.get_permissions()
    print permissions


apks_folder = '/home/mkr/Desktop/projects/python/databases/cic_and_mal_2017/subtrain_apks'
apk_files = []
for root, class_dirs, _ in os.walk(apks_folder):
    for class_dir in class_dirs:
        for r, _, files in os.walk(os.path.join(root, apks_folder)):
            for f in files:
                if f.endswith('.apk'):
                    apk_path = os.path.join(root, class_dir, f)
                    apk_files.append(apk_path)

subtrain = pd.read_csv(constants.CSV_SUBTRAIN)
malware_classes = pd.read_csv(constants.CSV_CLASSES)
ifs_map = defaultdict(Counter)

count = 0
intent_filters_list = []
for row in subtrain.get_values():
    malware_class_name = malware_classes[malware_classes.ClassId == row[1]].ClassName.get_values()[0]
    filename = os.path.join(apks_folder, malware_class_name, row[0] + ".apk")
    print 'Apk: %s' % filename
    intent_filters = get_all_intent_filters(APK(filename))
    ifs_map[row[0]] = Counter(intent_filters)
    intent_filters_list.extend(intent_filters)


intent_filters_keys = list(Counter(intent_filters_list).keys())

cc = Counter([])
for d in ifs_map.values():
    cc += d
selectedfeatures = {}
tc = 0
for k, v in cc.iteritems():
    selectedfeatures[k] = v
    print k, v
    tc += 1
dataframelist = []
for fid, op3gram in ifs_map.iteritems():
    standard = {}
    standard["Id"] = fid
    for feature in selectedfeatures:
        if feature in op3gram:
            standard[feature] = op3gram[feature]
        else:
            standard[feature] = 0
    dataframelist.append(standard)

df = pd.DataFrame(dataframelist)
df.to_csv('test_file.csv', index=False)
