import os
import time
import graph.graph_predict as graph_approach
import n_gram.secondrandomforest as opcode_approach
import grayscaled_image.img_train_model2 as img_approach

logTag = 'System'


def predict(apk_file_location):
    calc_results = dict()
    result = dict()
    approaches = ["Image", "Graph", "Opcode"]
    for a in approaches:
        calc_results[a] = dict()
        calc_results[a]['filename'] = ''
        calc_results[a]['className'] = ''
        calc_results[a]['probability'] = 0
        calc_results[a]['probabilityAll'] = []

    def save_results(className, prob, probAll, approach):
        calc_results[approach]['filename'] = apk_file_location
        calc_results[approach]['className'] = className
        calc_results[approach]['probability'] = prob
        calc_results[approach]['probabilityAll'] = probAll

    def display(res):
        print '----------------------------'
        print 'File:        %s' % res['filename']
        print 'Class:       %s' % res['className']
        print 'Approach:    %s' % res['approach']
        print 'Probability: %s' % res['probability']
        print 'All probs:   %s' % res['probabilityAll']
        print '----------------------------'

    print '[%s]: File: %s' % (logTag, os.path.basename(apk_file_location))
    print '[%s]: Size: %s KB' % (logTag, os.path.getsize(apk_file_location) / 1000)

    print '[Graph]: Starting...'
    start_time = time.time()
    graph_class_name, graph_prediction_probability, graph_prediction_probability_all, path_to_graph_json = graph_approach.predict(
        apk_file_location=apk_file_location)
    print '[Graph]: Duration: %s sec.' % (time.time() - start_time)

    save_results(className=graph_class_name, prob=graph_prediction_probability, probAll=graph_prediction_probability_all, approach='Graph')

    if graph_prediction_probability < 0.5:
        print '[Image]: Starting...'
        start_time = time.time()
        img_class_name, img_prediction_probability, img_prediction_probability_all = img_approach.predict(path_to_json=path_to_graph_json)
        print '[Image]: Duration: %s sec.' % (time.time() - start_time)

        save_results(className=img_class_name, prob=img_prediction_probability, probAll=img_prediction_probability_all, approach='Image')

        if img_prediction_probability < 0.5:
            print '[Opcode]: Starting...'
            start_time = time.time()
            opcode_class_name, opcode_prediction_probability, opcode_prediction_probability_all = opcode_approach.predict(apk_file_location=apk_file_location)
            print '[Opcode]: Duration: %s sec.' % (time.time() - start_time)
            save_results(className=opcode_class_name, prob=opcode_prediction_probability, probAll=opcode_prediction_probability_all, approach='Opcode')

    max_prob = 0
    for approach in ['Image', 'Graph', 'Opcode']:
        if calc_results[approach]['probability'] > max_prob:
            result = calc_results[approach]
            result['approach'] = approach

    display(result)


if __name__ == '__main__':
    predict('/home/mkr/Desktop/projects/python/databases/cic_and_mal_2017/apks/test_fam/scareware_10261625aa8ca539ecd2a870c8bbc086.apk')

    # calc_results = dict()
    # result = dict()
    # approaches = ["Image", "Graph", "Opcode"]
    #
    # for a in approaches:
    #     calc_results[a] = dict()
    #     calc_results[a]['filename'] = ''
    #     calc_results[a]['className'] = ''
    #     calc_results[a]['probability'] = 0
    #     calc_results[a]['probabilityAll'] = []
    #
    # calc_results[approaches[0]]['filename'] = '0'
    # calc_results[approaches[0]]['className'] = '0'
    # calc_results[approaches[0]]['probability'] = 0
    # calc_results[approaches[0]]['probabilityAll'] = [0, 0]
    #
    # calc_results[approaches[1]]['filename'] = '1'
    # calc_results[approaches[1]]['className'] = '1'
    # calc_results[approaches[1]]['probability'] = 1
    # calc_results[approaches[1]]['probabilityAll'] = [1, 1]
    #
    # res = calc_results[approaches[1]]
    # res['approach'] = approaches[1]
    #
    # print '----------------------------'
    # print 'File:        %s' % res['filename']
    # print 'Class:       %s' % res['className']
    # print 'Approach:    %s' % res['approach']
    # print 'Probability: %s' % res['probability']
    # print 'All probs:   %s' % res['probabilityAll']
    # print '----------------------------'
