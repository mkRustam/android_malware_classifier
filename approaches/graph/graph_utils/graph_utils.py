import networkx as nx
from GraphPoint import GraphPoint
from androguard.core.analysis.analysis import ExternalMethod


def get_graph(a, d, dx):
    op_count = 0
    graph = nx.MultiDiGraph()
    for m in dx.find_methods():
        orig_method = m.get_method()

        if isinstance(orig_method, ExternalMethod):
            is_this_external = True
        else:
            is_this_external = False

        node_name = GraphPoint(orig_method).get_point(a)

        graph.add_node(node_name, external=is_this_external)

        for other_class, callee, offset in m.get_xref_to():
            if isinstance(callee, ExternalMethod):
                is_external = True
            else:
                is_external = False

            node_child_name = GraphPoint(callee).get_point(a)

            if node_child_name not in graph.node:
                graph.add_node(node_child_name, external=is_external)
                op_count += 1
            graph.add_edge(node_name, node_child_name)
    return graph, op_count
