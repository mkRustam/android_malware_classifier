import hashlib


class GraphObject(object):
    def __init__(self, edges, nodes):
        self.edges = edges
        self.nodes = nodes
        self.pre_processing()

    def pre_processing(self):
        edges = []
        nodes = []
        for edge in self.edges:
            """save only hash instead of {'source':'Obj1', 'target':'Obj2'}"""
            edges.append(hashlib.md5(edge['source'] + edge['target']).hexdigest())
        self.edges = edges

        for node in self.nodes:
            nodes.append(node)
        self.nodes = nodes

    def get_dict(self):
        res = dict()
        res['edges'] = self.edges
        res['nodes'] = self.nodes
        return res
