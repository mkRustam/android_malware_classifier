class MyMethodClass(object):
    list_self_defined_classes = (
        'android.',
        'androidx.',
        'java.',
        'google.',
        'javax.',
        'xml.',
        'apache.',
        'junit.',
        'json.',
        'dom.',
        'dalvik.',
        'com.google.',
    )

    def __init__(self, className, methodName, whomDefined):
        self.className = className
        self.methodName = methodName.replace(';', '')
        self.whomDefined = whomDefined.replace(';', '')

    def show(self):
        print "Class Name: " + self.className + "\n" "Method Name: " + self.methodName + "\n" + "Type: " + self.whomDefined

    def __init__(self, encodedMethod):
        self.className = str(encodedMethod.get_class_name())
        if self.className.startswith('L'):
            self.className = self.className[1:]
        if self.className.endswith('.'):
            self.className = self.className[:-1]
        self.className = self.className.replace('/', '.')

        self.methodName = str(encodedMethod.get_name())

        self.whomDefined = "self_defined"
        for definer in self.list_self_defined_classes:
            if self.className.startswith(definer):
                self.whomDefined = definer
        if self.whomDefined.startswith('L'):
            self.whomDefined = self.whomDefined[1:]
        if self.whomDefined.endswith('.'):
            self.whomDefined = self.whomDefined[:-1]
